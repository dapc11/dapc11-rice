#!/usr/bin/python

import pystache
import json
import os
import sys
from pathlib import Path
import getpass

class Ricer():
    def __init__(self, overwrite_current=False):
        self.overwrite_current = overwrite_current
        template = 'dapc_rice.json'
        with open(template, 'r') as f:
            print("Using context: '{}'".format(os.path.abspath(template)))
            self.context = json.load(f)

    def _render_template(self, target, template):
        if self.overwrite_current:
            destination = Path('/home/{0}/.config/{1}'.format(getpass.getuser(), target))
        else:
            destination = Path('output/{0}'.format(target))
        print('Writing to {0}'.format(destination))
        if not os.path.exists(destination.parent):
            os.makedirs(destination.parent)
        with open(destination, 'w') as f:
            f.write(pystache.render(template, self.context))

    def generate_config(self, source):
        with open(source, 'r') as f:
            template = pystache.parse(f.read())
            self._render_template(source, template)

if __name__ == "__main__":
    ricer = Ricer(True)
    ricer.generate_config('i3/config')
    ricer.generate_config('i3/rofi-powermgmt')
    ricer.generate_config('i3/rofi-randr')
    ricer.generate_config('kitty/kitty.conf')
    ricer.generate_config('dunst/dunstrc')
    ricer.generate_config('rofi/config.rasi')
    ricer.generate_config('i3status/config')
    ricer.generate_config('Code - OSS/User/settings.json')
    sys.exit(0)
